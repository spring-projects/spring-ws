---
resource_types:
- name: artifactory-resource
  type: docker-image
  source:
    repository: springio/artifactory-resource
    tag:        0.0.4

- name: github-status
  type: docker-image
  source:
    repository: dpb587/github-status-resource
    tag:        master

- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr
    tag:        latest

- name: slack-notification
  type: docker-image
  source:
    repository: nebhale/slack-notification-resource

resources:
- name: openjdk:8-jdk
  type: docker-image
  source:
    repository: openjdk
    tag:        8-jdk

- name: openjdk:11-jdk
  type: docker-image
  source:
    repository: openjdk
    tag:        11-jdk

- name: spring-ws-github
  type: git
  source:
    uri: https://github.com/spring-projects/spring-ws.git
    branch: ((branch))

- name: spring-ws-artifactory
  type: artifactory-resource
  source:
    uri: https://repo.spring.io
    username: ((artifactory-username))
    password: ((artifactory-password))
    build_name: Spring Web Services

- name: spring-ws-pull-requests
  type: pull-request
  source:
    access_token: ((github-access-token))
    repo: spring-projects/spring-ws
    base: ((branch))

- name: spring-ws-release
  type: git
  source:
    uri: https://github.com/spring-projects/spring-ws.git
    branch: ((release-branch))

- name: spring-ws-status
  type: github-status
  source:
    access_token: ((github-access-token))
    repository:   spring-projects/spring-ws
    branch: ((branch))

- name: slack
  type: slack-notification
  source:
    url: ((slack))
    
groups:
- name: spring-ws
  jobs:
  - Test - JDK 8
  - Test - JDK 8 and Spring.NEXT
  - Test - JDK 8 and Spring.NEXT (snapshots)
  - Test - JDK 8 and Spring (snapshots)
  - Test - JDK 11
  - Test - JDK 11 and Spring.NEXT
  - Test - JDK 11 and Spring.NEXT (snapshots)
  - Test - JDK 11 and Spring (snapshots)
  - Build
- name: pull-requests
  jobs:
  - spring-ws-pull-requests
- name: release
  jobs:
  - release-to-artifactory
  - promote-to-bintray
  - sync-to-maven-central

jobs:
- name: Test - JDK 8
  serial: true
  public: true
  plan:
  - get: spring-ws-github
    trigger: true
  - get: openjdk:8-jdk
    trigger: true
  - task: test
    file: spring-ws-github/ci/test.yml
    params: { PROFILE: "distribute,convergence" }
  <<: *slack-test-failure
  <<: *slack-test-success

- name: Test - JDK 8 and Spring.NEXT
  serial: true
  public: true
  plan:
  - get: spring-ws-github
    trigger: true
  - get: openjdk:8-jdk
    trigger: true
  - task: test
    file: spring-ws-github/ci/test.yml
    params: { PROFILE: "springnext,convergence" }
  <<: *slack-test-failure
  <<: *slack-test-success

- name: Test - JDK 8 and Spring.NEXT (snapshots)
  serial: true
  public: true
  plan:
  - get: spring-ws-github
    trigger: true
  - get: openjdk:8-jdk
    trigger: true
  - task: test
    file: spring-ws-github/ci/test.yml
    params: { PROFILE: "springnext-buildsnapshot,convergence" }
  <<: *slack-test-failure
  <<: *slack-test-success

- name: Test - JDK 8 and Spring (snapshots)
  serial: true
  public: true
  plan:
  - get: spring-ws-github
    trigger: true
  - get: openjdk:8-jdk
    trigger: true
  - task: test
    file: spring-ws-github/ci/test.yml
    params: { PROFILE: "spring-buildsnapshot,convergence" }
  <<: *slack-test-failure
  <<: *slack-test-success

- name: Test - JDK 11
  serial: true
  public: true
  plan:
  - get: spring-ws-github
    trigger: true
  - get: openjdk:11-jdk
    trigger: true
  - task: test
    image: openjdk:11-jdk
    file: spring-ws-github/ci/test.yml
    params: { PROFILE: "distribute,java11,convergence" }
  <<: *slack-test-failure
  <<: *slack-test-success

- name: Test - JDK 11 and Spring.NEXT
  serial: true
  public: true
  plan:
  - get: spring-ws-github
    trigger: true
  - get: openjdk:11-jdk
    trigger: true
  - task: test
    image: openjdk:11-jdk
    file: spring-ws-github/ci/test.yml
    params: { PROFILE: "springnext,java11,convergence" }
  <<: *slack-test-failure
  <<: *slack-test-success

- name: Test - JDK 11 and Spring.NEXT (snapshots)
  serial: true
  public: true
  plan:
  - get: spring-ws-github
    trigger: true
  - get: openjdk:11-jdk
    trigger: true
  - task: test
    image: openjdk:11-jdk
    file: spring-ws-github/ci/test.yml
    params: { PROFILE: "springnext-buildsnapshot,java11,convergence" }
  <<: *slack-test-failure
  <<: *slack-test-success

- name: Test - JDK 11 and Spring (snapshots)
  serial: true
  public: true
  plan:
  - get: spring-ws-github
    trigger: true
  - get: openjdk:11-jdk
    trigger: true
  - task: test
    image: openjdk:11-jdk
    file: spring-ws-github/ci/test.yml
    params: { PROFILE: "spring-buildsnapshot,java11,convergence" }
  <<: *slack-test-failure
  <<: *slack-test-success

- name: Build
  serial: true
  public: true
  plan:
  - get: spring-ws-github
    trigger: true
    passed: [
      Test - JDK 8,
      Test - JDK 8 and Spring.NEXT,
      Test - JDK 8 and Spring.NEXT (snapshots),
      Test - JDK 8 and Spring (snapshots),
      Test - JDK 11,
      Test - JDK 11 and Spring.NEXT,
      Test - JDK 11 and Spring.NEXT (snapshots),
      Test - JDK 11 and Spring (snapshots)
    ]
  - put: spring-ws-status
    params:
      commit: spring-ws-github
      state: pending
  - task: build
    file: spring-ws-github/ci/build.yml
  - put: spring-ws-artifactory
    params:
      build_number:   ${BUILD_NAME}
      build_uri:      ${ATC_EXTERNAL_URL}/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}
      repo:           libs-snapshot-local
      folder:         spring-ws-artifactory
      artifact_set:
      - include:
        - "/**"
        properties:
          zip.deployed: false
          zip.displayname: "Spring Web Services"
          zip.name: "spring-ws"
          zip.type: "docs"
  on_failure:
    aggregate:
    - put: spring-ws-status
      params:
        commit: spring-ws-github
        state: failure
    - put: slack
      params:
        attachments:
          - color: danger
            fallback: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME <FAILURE>"
            text: "Build has failed"
            title: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME"
            title_link: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
  on_success:
    aggregate:
    - put: spring-ws-status
      params:
        commit: spring-ws-github
        state: success
    - put: slack
      params:
        attachments:
          - color: good
            fallback: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME <SUCCESS>"
            text: "Build has succeeded!"
            title: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME"
            title_link: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: spring-ws-pull-requests
  public: true
  plan:
  - get: spring-ws-github
    resource: spring-ws-pull-requests
    trigger: true
    version: every
  - get: openjdk:11-jdk
  - put: spring-ws-pull-requests
    params:
      path: spring-ws-github
      status: pending
  - aggregate:
    - task: test (JDK 8)
      file: spring-ws-github/ci/test.yml
      params: { PROFILE: "distribute,convergence" }
    - task: test (JDK 8 and Spring.NEXT)
      file: spring-ws-github/ci/test.yml
      params: { PROFILE: "springnext,convergence" }
    - task: test (JDK 8 and Spring.NEXT snapshots)
      file: spring-ws-github/ci/test.yml
      params: { PROFILE: "springnext-buildsnapshot,convergence" }
    - task: test (JDK 8 and Spring snapshots)
      file: spring-ws-github/ci/test.yml
      params: { PROFILE: "spring-buildsnapshot,convergence" }
    - task: test (JDK 11)
      image: openjdk:11-jdk
      file: spring-ws-github/ci/test.yml
      params: { PROFILE: "distribute,java11,convergence" }
    - task: test (JDK 11 and Spring.NEXT)
      image: openjdk:11-jdk
      file: spring-ws-github/ci/test.yml
      params: { PROFILE: "springnext,java11,convergence" }
    - task: test (JDK 11 and Spring.NEXT snapshots)
      image: openjdk:11-jdk
      file: spring-ws-github/ci/test.yml
      params: { PROFILE: "springnext-buildsnapshot,java11,convergence" }
    - task: test (JDK 11 and Spring snapshots)
      image: openjdk:11-jdk
      file: spring-ws-github/ci/test.yml
      params: { PROFILE: "spring-buildsnapshot,java11,convergence" }
  on_failure:
    aggregate:
    - put: spring-ws-pull-requests
      params:
        path: spring-ws-github
        status: failure
    - put: slack
      params:
        attachments:
          - color: danger
            fallback: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME <FAILURE>"
            text: "Build has failed"
            title: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME"
            title_link: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
  on_success:
    aggregate:
    - put: spring-ws-pull-requests
      params:
        path: spring-ws-github
        status: success
    - put: slack
      params:
        attachments:
          - color: good
            fallback: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME <SUCCESS>"
            text: "Build has succeeded!"
            title: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME"
            title_link: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: release-to-artifactory
  serial: true
  public: true
  plan:
  - get: spring-ws-github
    resource: spring-ws-release
    trigger: true
  - put: spring-ws-status
    params:
      commit: spring-ws-release
      state: pending
  - task: build
    file: spring-ws-github/ci/build.yml
  - put: spring-ws-artifactory
    params:
      build_number:   ${BUILD_NAME}
      build_uri:      ${ATC_EXTERNAL_URL}/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}
      repo:           libs-milestone-local
      folder:         spring-ws-artifactory
      artifact_set:
      - include:
        - "/**"
        properties:
          zip.deployed: false
          zip.displayname: "Spring HATEOAS"
          zip.name: "spring-ws"
          zip.type: "docs"
  on_failure:
    aggregate:
    - put: spring-ws-status
      params:
        commit: spring-ws-github
        state: failure
    - put: slack
      params:
        attachments:
          - color: danger
            fallback: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME <FAILURE>"
            text: "Releasing to artifactory has failed"
            title: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME"
            title_link: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
  on_success:
    aggregate:
    - put: spring-ws-status
      params:
        commit: spring-ws-github
        state: success
    - put: slack
      params:
        attachments:
          - color: good
            fallback: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME <SUCCESS>"
            text: "Releasing to artifactory has succeeded!"
            title: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME"
            title_link: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: promote-to-bintray
  serial: true
  plan:
  - get: spring-ws-github
    resource: spring-ws-release
  - get: spring-ws-artifactory
    trigger: true
    passed: [release-to-artifactory]
    params:
      save_build_info: true
  - task: promote-to-bintray
    file: spring-ws-github/ci/promote-to-bintray.yml
    params:
      ARTIFACTORY_USERNAME: ((artifactory-username))
      ARTIFACTORY_PASSWORD: ((artifactory-password))
  on_failure:
    aggregate:
    - put: spring-ws-status
      params:
        commit: spring-ws-github
        state: failure
    - put: slack
      params:
        attachments:
          - color: danger
            fallback: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME <FAILURE>"
            text: "Promoting to bintray has failed"
            title: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME"
            title_link: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
  on_success:
    aggregate:
    - put: spring-ws-status
      params:
        commit: spring-ws-github
        state: success
    - put: slack
      params:
        attachments:
          - color: good
            fallback: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME <SUCCESS>"
            text: "Promoting to bintray has succeeded!"
            title: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME"
            title_link: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: sync-to-maven-central
  serial: true
  plan:
  - get: spring-ws-github
    resource: spring-ws-release
  - get: spring-ws-artifactory
    trigger: true
    passed: [promote-to-bintray]
    params:
      save_build_info: true
  - task: sync-to-maven-central
    file: spring-ws-github/ci/sync-to-maven-central.yml
    params:
      BINTRAY_USERNAME: ((bintray-username))
      BINTRAY_API_KEY: ((bintray-api-key))
      SONATYPE_USER_TOKEN: ((sonatype-user-token))
      SONATYPE_PASSWORD_TOKEN: ((sonatype-user-token-password))
      ARTIFACTORY_USERNAME: ((artifactory-username))
      ARTIFACTORY_PASSWORD: ((artifactory-password))
  on_failure:
    aggregate:
    - put: spring-ws-status
      params:
        commit: spring-ws-github
        state: failure
    - put: slack
      params:
        attachments:
          - color: danger
            fallback: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME <FAILURE>"
            text: "Syncing to maven central has failed"
            title: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME"
            title_link: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
  on_success:
    aggregate:
    - put: spring-ws-status
      params:
        commit: spring-ws-github
        state: success
    - put: slack
      params:
        attachments:
          - color: good
            fallback: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME <SUCCESS>"
            text: "Syncing to maven central has succeeded!"
            title: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME"
            title_link: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME


slack-test-success: &slack-test-success
  on_success:
    put: slack
    params:
      attachments:
        - color: good
          fallback: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME <FAILURE>"
          text: "Test has succeeded"
          title: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME"
          title_link: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

slack-test-failure: &slack-test-failure
  on_failure:
    put: slack
    params:
      attachments:
        - color: danger
          fallback: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME <FAILURE>"
          text: "Test has failed"
          title: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME #$BUILD_NAME"
          title_link: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME


